VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ScheduleSheet"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Private Const DATA_START_CELL = "A4"
Public Enum ColOffset
    Number = 0
    TaskName
    Dependency
    Duration
    PlannedStartDay
    PlannedEndDay
End Enum

Public Property Get DataStartCell() As Range
    Set DataStartCell = Range(DATA_START_CELL)
End Property


Public Property Get LastRow() As Long
    Let LastRow = Cells.SpecialCells(xlLastCell).Row()
End Property

Public Function FindRowByShapeName(shape_name As String) As Long
    Dim r As Range
    For Each r In Range("G4:G" & LastRow)
        If r.Value = shape_name Then
            Let FindRowByShapeName = r.Row
            Exit Function
        End If
    Next
    Let FindRowByShapeName = 0
End Function

Public Sub ClearSchedule()
    Range("E4:F" & LastRow).ClearContents
End Sub

Public Function GetTaskListAsNodes() As Object
    Dim result As Nodes: Set result = New Nodes
    Dim r As Range
    
    Dim tmpLastRow: tmpLastRow = Range("B" & Rows.Count).End(xlUp).Row
    If tmpLastRow >= 4 Then
        For Each r In Range(Range("B4"), tmpLastRow)
            With New Node
                .TaskTitle = r.Value
                If IsNumeric(CStr(r.Offset(0, -1).Value)) Then
                    .TaskTitle = r.Offset(0, -1).Value & "." & .TaskTitle
                End If
                .ShapeObjectName = CStr(r.Offset(0, 5).Value)
                Set .TaskListRange = r
                result.AddNode .Self
            End With
        Next
    End If
    Set GetTaskListAsNodes = result
End Function

